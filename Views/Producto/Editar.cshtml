@model InverPaper.Models.ProductoViewModel
@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Editar Producto</h2>
@using (Html.BeginForm("Editar", "Producto", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Nombre)
        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descripcion)
        @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StockMin)
        @Html.TextBoxFor(model => model.StockMin, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.StockMin, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.Label("StockActual", "Stock Actual", htmlAttributes: new { @class = "control-label" })
        <p class="form-control-plaintext">@Model.StockActual</p>
        @Html.HiddenFor(model => model.StockActual) <!-- se envía en el POST -->
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.PrecioVenta)
        @Html.TextBoxFor(model => model.PrecioVenta, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.PrecioVenta, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdCategoria)
        @Html.DropDownListFor(model => model.IdCategoria, (SelectList)ViewBag.Categorias, "Seleccione la categoría", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.IdCategoria, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdMarca)
        @Html.DropDownListFor(model => model.IdMarca, (SelectList)ViewBag.Marcas, "Seleccione la marca", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.IdMarca, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.IdEstado)
        @Html.DropDownListFor(model => model.IdEstado, (SelectList)ViewBag.Estados, "Seleccione el estado", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.IdEstado, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Guardar</button>
        @Html.ActionLink("Cancelar", "Productos", "Producto", null, new { @class = "btn btn-secondary" })
    </div>

}
<style>
    /* Estilo CSS para ajustar los campos */
    .form-control {
        width: 100%; /* Ocupa todo el ancho disponible, pero se limita por el contenedor */
        max-width: 400px; /* Limita el ancho máximo de los campos */
        margin: 0 auto; /* Centra el formulario en el contenedor */
        box-sizing: border-box;
    }

    .form-group {
        margin-bottom: 1rem; /* Espacio entre los campos */
    }

    .btn {
        width: auto; /* No estira los botones */
    }

    /* Centra el formulario */
    form {
        max-width: 500px; /* Máximo ancho del formulario */
        margin: 0 auto; /* Centra el formulario */
    }
</style>

