@model InverPaper.Models.CrearCategoriaViewModel
@{
    ViewBag.Title = "Crear Categoria";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Crear Categoría</h2>

@using (Html.BeginForm("Crear", "Categoria", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Nombre")  <!-- Cambiado de "NombreCategoria" a "Nombre" -->
        @Html.TextBoxFor(model => model.NombreCategoria, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.NombreCategoria, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-naranja">Guardar</button>
        @Html.ActionLink("Cancelar", "Categorias", "Categoria", null, new { @class = "btn btn-secondary" })
    </div>
}
<style>
    /* Estilo CSS para ajustar los campos */
    .form-control {
        width: 100%; /* Ocupa todo el ancho disponible, pero se limita por el contenedor */
        max-width: 400px; /* Limita el ancho máximo de los campos */
        margin: 0 auto; /* Centra el formulario en el contenedor */
        box-sizing: border-box;
    }

    .form-group {
        margin-bottom: 1rem; /* Espacio entre los campos */
    }

    .btn {
        width: auto; /* No estira los botones */
    }

    /* Centra el formulario */
    form {
        max-width: 500px; /* Máximo ancho del formulario */
        margin: 0 auto; /* Centra el formulario */
    }
</style>

